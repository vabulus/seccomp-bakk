16a17,22
> /* changes fabio */
> #include <seccomp.h>
> #include <sys/prctl.h>
> #include <stdio.h>
> #include <stdlib.h>
> 
466a473,501
> 
> void apply_seccomp() {
>     scmp_filter_ctx ctx;
> 
>     ctx = seccomp_init(SCMP_ACT_ALLOW);
>     if (!ctx) {
>         fprintf(stderr, "Seccomp initialization failed!\n");
>         exit(EXIT_FAILURE);
>     }
> 
>     prctl(PR_SET_NO_NEW_PRIVS, 1, 0, 0, 0);
>     seccomp_rule_add(ctx, SCMP_ACT_KILL_PROCESS, SCMP_SYS(execve), 0);
>     seccomp_rule_add(ctx, SCMP_ACT_KILL_PROCESS, SCMP_SYS(execveat), 0);
> 
>     seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(read), 0);
>     seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(write), 0);
>     seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(open), 0);
>     seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(close), 0);
>     seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(mmap), 0);
>     seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(fork), 0);
>     seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(vfork), 0);
>     seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(socket), 0);
>     seccomp_rule_add(ctx, SCMP_ACT_ALLOW, SCMP_SYS(accept), 0);
> 
>     seccomp_load(ctx);
> }
> 
> 
> 
468a504
>     apply_seccomp();
